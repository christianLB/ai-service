{
  "openapi": "3.1.0",
  "paths": {
    "/api/financial/accounts": {
      "get": {
        "summary": "List accounts",
        "tags": [],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 20 }
          }
        ],
        "operationId": "listAccounts",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": ["id", "provider", "name", "currency"]
                      }
                    },
                    "total": { "type": "number" },
                    "page": { "type": "integer" },
                    "limit": { "type": "integer" }
                  },
                  "required": ["accounts", "total", "page", "limit"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/api/financial/accounts/{id}": {
      "get": {
        "summary": "Get account by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "operationId": "getAccountById",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "uuid" },
                    "provider": { "type": "string" },
                    "name": { "type": "string" },
                    "iban": { "type": "string" },
                    "currency": { "type": "string", "minLength": 3, "maxLength": 3 },
                    "createdAt": { "type": "string", "format": "date-time" }
                  },
                  "required": ["id", "provider", "name", "currency"]
                }
              }
            }
          }
        }
      }
    },
    "/api/financial/clients": {
      "get": {
        "summary": "List clients",
        "parameters": [
          { "name": "email", "in": "query", "schema": { "type": "string" } },
          { "name": "name", "in": "query", "schema": { "type": "string" } },
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 20 }
          }
        ],
        "operationId": "listClients",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "email": { "type": "string" },
                          "status": { "type": "string" },
                          "createdAt": { "type": "string", "format": "date-time" }
                        },
                        "required": ["id", "name", "email", "status"]
                      }
                    },
                    "total": { "type": "number" },
                    "page": { "type": "integer" },
                    "limit": { "type": "integer" }
                  },
                  "required": ["clients", "total", "page", "limit"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/api/financial/clients/{id}": {
      "get": {
        "summary": "Get client by id",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "operationId": "getClientById",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "email": { "type": "string" },
                    "status": { "type": "string" },
                    "createdAt": { "type": "string", "format": "date-time" }
                  },
                  "required": ["id", "name", "email", "status"]
                }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/financial/invoices": {
      "get": {
        "summary": "List invoices",
        "parameters": [
          { "name": "clientId", "in": "query", "schema": { "type": "string" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } },
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 20 }
          }
        ],
        "operationId": "listInvoices",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "invoiceNumber": { "type": "string" },
                          "clientId": { "type": "string" },
                          "status": { "type": "string" },
                          "total": { "type": "number" },
                          "issueDate": { "type": "string", "format": "date" }
                        },
                        "required": ["id", "invoiceNumber", "status", "total", "issueDate"]
                      }
                    },
                    "total": { "type": "number" },
                    "page": { "type": "integer" },
                    "limit": { "type": "integer" }
                  },
                  "required": ["invoices", "total", "page", "limit"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/api/financial/invoices/{id}": {
      "get": {
        "summary": "Get invoice by id",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "operationId": "getInvoiceById",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "invoiceNumber": { "type": "string" },
                    "clientId": { "type": "string" },
                    "status": { "type": "string" },
                    "total": { "type": "number" },
                    "issueDate": { "type": "string", "format": "date" }
                  },
                  "required": ["id", "invoiceNumber", "status", "total", "issueDate"]
                }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    }
  },
  "info": {
    "title": "AI-Service – Financial API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": { "type": "string" },
          "message": { "type": "string" }
        },
        "required": ["message"]
      }
    }
  }
}
