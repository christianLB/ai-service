openapi: 3.0.3
info:
  title: Financial Service API
  version: 1.0.0
  description: API for financial domain operations including accounts, clients, invoices, transactions, and attachments

servers:
  - url: http://localhost:3001
    description: Local development server

paths:
  /api/financial/accounts:
    get:
      summary: List bank accounts
      operationId: listAccounts
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number (1-based)
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Items per page
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/accounts/{id}:
    get:
      summary: Get account by ID
      operationId: getAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/clients:
    get:
      summary: List clients
      operationId: listClients
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: email
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of clients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientListResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/clients/{id}:
    get:
      summary: Get client by ID
      operationId: getClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Client details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/invoices:
    get:
      summary: List invoices
      operationId: listInvoices
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: clientId
          in: query
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, sent, paid, overdue, cancelled]
      responses:
        '200':
          description: List of invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceListResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/invoices/{id}:
    get:
      summary: Get invoice by ID
      operationId: getInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Invoice details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/transactions:
    get:
      summary: List transactions
      operationId: listTransactions
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: accountId
          in: query
          schema:
            type: string
            description: Filter by account ID
        - name: type
          in: query
          schema:
            type: string
            enum: [debit, credit, transfer]
            description: Filter by transaction type
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, confirmed, failed, cancelled]
            description: Filter by transaction status
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
            description: Start date for date range filter
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
            description: End date for date range filter
        - name: minAmount
          in: query
          schema:
            type: number
            description: Minimum transaction amount
        - name: maxAmount
          in: query
          schema:
            type: number
            description: Maximum transaction amount
        - name: search
          in: query
          schema:
            type: string
            description: Search in description and counterparty name
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/transactions/{id}:
    get:
      summary: Get transaction by ID
      operationId: getTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/transactions/export:
    get:
      summary: Export transactions
      operationId: exportTransactions
      parameters:
        - name: format
          in: query
          schema:
            type: string
            enum: [csv, json]
            default: csv
        - name: accountId
          in: query
          schema:
            type: string
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Exported transactions
          content:
            text/csv:
              schema:
                type: string
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/attachments:
    get:
      summary: List attachments
      operationId: listAttachments
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: invoiceId
          in: query
          schema:
            type: string
            format: uuid
            description: Filter by invoice ID
        - name: fileType
          in: query
          schema:
            type: string
            description: Filter by file type
      responses:
        '200':
          description: List of attachments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentListResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/financial/attachments/{id}:
    get:
      summary: Get attachment by ID
      operationId: getAttachment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Attachment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
        '404':
          description: Attachment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
          description: Error message
        code:
          type: string
          description: Error code (BAD_REQUEST, NOT_FOUND, etc.)

    PaginationInfo:
      type: object
      required:
        - page
        - limit
        - total
      properties:
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
          maximum: 100
        total:
          type: integer
          minimum: 0

    Account:
      type: object
      required:
        - id
        - account_id
        - name
        - type
      properties:
        id:
          type: string
          format: uuid
        account_id:
          type: string
        name:
          type: string
        type:
          type: string
        institution:
          type: string
        institution_id:
          type: string
        iban:
          type: string
        currency:
          type: string
        balance:
          type: number
        available_balance:
          type: number
        is_active:
          type: boolean
        last_sync:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    AccountListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginationInfo'
        - type: object
          required:
            - accounts
          properties:
            accounts:
              type: array
              items:
                $ref: '#/components/schemas/Account'

    Client:
      type: object
      required:
        - id
        - name
        - email
        - status
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        taxId:
          type: string
        phone:
          type: string
        address:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string
        status:
          type: string
          enum: [active, inactive]
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ClientListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginationInfo'
        - type: object
          required:
            - clients
          properties:
            clients:
              type: array
              items:
                $ref: '#/components/schemas/Client'

    Invoice:
      type: object
      required:
        - id
        - invoiceNumber
        - clientId
        - status
        - total
        - issueDate
        - dueDate
      properties:
        id:
          type: string
          format: uuid
        invoiceNumber:
          type: string
        clientId:
          type: string
          format: uuid
        clientName:
          type: string
        clientTaxId:
          type: string
        status:
          type: string
          enum: [draft, sent, paid, overdue, cancelled]
        total:
          type: number
        subtotal:
          type: number
        tax:
          type: number
        issueDate:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        paidDate:
          type: string
          format: date
        notes:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    InvoiceItem:
      type: object
      required:
        - description
        - quantity
        - unitPrice
        - total
      properties:
        description:
          type: string
        quantity:
          type: number
        unitPrice:
          type: number
        total:
          type: number

    InvoiceListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginationInfo'
        - type: object
          required:
            - invoices
          properties:
            invoices:
              type: array
              items:
                $ref: '#/components/schemas/Invoice'

    Transaction:
      type: object
      required:
        - id
        - transaction_id
        - account_id
        - amount
        - type
        - date
      properties:
        id:
          type: string
          format: uuid
        transaction_id:
          type: string
        account_id:
          type: string
        amount:
          type: number
        currency:
          type: string
        type:
          type: string
          enum: [debit, credit, transfer]
        status:
          type: string
          enum: [pending, confirmed, failed, cancelled]
        description:
          type: string
        reference:
          type: string
        counterparty_name:
          type: string
        counterparty_account:
          type: string
        date:
          type: string
          format: date
        tags:
          type: array
          items:
            type: string
        fee_amount:
          type: number
        fee_currency:
          type: string
        metadata:
          type: object
        gocardless_data:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    TransactionListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginationInfo'
        - type: object
          required:
            - transactions
          properties:
            transactions:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
            stats:
              type: object
              properties:
                totalIncome:
                  type: number
                totalExpenses:
                  type: number

    Attachment:
      type: object
      required:
        - id
        - invoiceId
        - fileName
        - filePath
        - fileSize
        - fileType
        - uploadedAt
      properties:
        id:
          type: string
          format: uuid
        invoiceId:
          type: string
          format: uuid
        fileName:
          type: string
        filePath:
          type: string
        fileSize:
          type: integer
        fileType:
          type: string
        description:
          type: string
        uploadedBy:
          type: string
        uploadedAt:
          type: string
          format: date-time
        isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        deletedBy:
          type: string

    AttachmentListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginationInfo'
        - type: object
          required:
            - attachments
          properties:
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'