version: '3.8'

services:
  ai-service:
    image: ghcr.io/christianlb/ai-service:latest
    container_name: ai-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=ai_user
      - DB_NAME=ai_service_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - ai-network
    volumes:
      - /volume1/docker/ai-service/config/.env.production:/app/.env.local:ro
      - /volume1/docker/ai-service/documents:/app/documents
      - /volume1/docker/ai-service/logs:/app/logs
      - /volume1/docker/ai-service/frontend/dist:/app/frontend/dist:ro

  postgres:
    image: postgres:16-alpine
    container_name: ai-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ai_user
      - POSTGRES_DB=ai_service_db
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - /volume1/docker/ai-service/postgres-data:/var/lib/postgresql/data
      - /volume1/docker/ai-service/config/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - ai-network

  redis:
    image: redis:7-alpine
    container_name: ai-redis
    restart: unless-stopped
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - /volume1/docker/ai-service/redis-data:/data
    networks:
      - ai-network

  watchtower:
    image: containrrr/watchtower
    container_name: ai-watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_MONITOR_ONLY=false
      - WATCHTOWER_NOTIFICATIONS=log
      - WATCHTOWER_LOG_LEVEL=info
      - REPO_USER=${GITHUB_USER}
      - REPO_PASS=${GITHUB_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: ai-service ai-postgres ai-redis
    networks:
      - ai-network

networks:
  ai-network:
    driver: bridge