version: "3.8"

networks:
  ai-service-network:
    driver: bridge

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-service-db
    environment:
      POSTGRES_DB: ai_service
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: ultra_secure_password_2025
    volumes:
      - /volume1/docker/ai-service/postgres:/var/lib/postgresql/data
    networks:
      - ai-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_user -d ai_service"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache  
  redis:
    image: redis:7-alpine
    container_name: ai-service-redis
    command: redis-server --requirepass redis_secure_password_2025 --appendonly yes
    volumes:
      - /volume1/docker/ai-service/redis:/data
    networks:
      - ai-service-network
    restart: unless-stopped

  # Main Application - PUERTO 3003 FIJO
  ai-service:
    image: ghcr.io/christianlb/ai-service:latest
    container_name: ai-service-prod
    volumes:
      # Variables de entorno desde archivo montado
      - /volume1/docker/ai-service/config:/config:ro
      - /volume1/docker/ai-service/logs:/app/logs
      - /volume1/docker/ai-service/workflows:/app/data/workflows
      - /volume1/docker/ai-service/documents:/app/data/documents
      - /volume1/docker/ai-service/knowledge:/app/data/knowledge
    ports:
      - "3003:3000"  # PUERTO FIJO - NO CAMBIAR - El proxy reverso apunta a 3003
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - ai-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s