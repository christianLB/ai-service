version: '3.8'

services:
  ai-service:
    image: ghcr.io/christianlb/ai-service:latest
    container_name: ai-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - POSTGRES_HOST=ai-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ai_service
      - POSTGRES_USER=ai_user
      - REDIS_HOST=ai-redis
      - REDIS_PORT=6379
    ports:
      - "3003:3000"
    depends_on:
      - ai-postgres
      - ai-redis
    networks:
      - ai-network
    volumes:
      - /volume1/docker/ai-service/config/.env.production:/config/.env.production:ro
      - /volume1/docker/ai-service/documents:/app/documents
      - /volume1/docker/ai-service/logs:/app/logs
      - /volume1/docker/ai-service/frontend/dist:/app/public:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  ai-postgres:
    image: postgres:16-alpine
    container_name: ai-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ai_user
      - POSTGRES_DB=ai_service
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=md5
    ports:
      - "5433:5432"
    volumes:
      - /volume1/docker/ai-service/postgres:/var/lib/postgresql/data
      - /volume1/docker/ai-service/config/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - /volume1/docker/ai-service/config/init-financial.sql:/docker-entrypoint-initdb.d/02-init-financial.sql:ro
    networks:
      - ai-network

  ai-redis:
    image: redis:7-alpine
    container_name: ai-redis
    restart: unless-stopped
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - /volume1/docker/ai-service/redis:/data
    networks:
      - ai-network

  watchtower:
    image: containrrr/watchtower
    container_name: ai-watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=false
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_MONITOR_ONLY=false
      - WATCHTOWER_NOTIFICATIONS=telegram
      - WATCHTOWER_NOTIFICATION_TELEGRAM_TOKEN=${TELEGRAM_BOT_TOKEN}
      - WATCHTOWER_NOTIFICATION_TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - WATCHTOWER_LOG_LEVEL=info
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_API_TOKEN}
      - WATCHTOWER_HTTP_API_METRICS=true
      - WATCHTOWER_HTTP_API_UPDATE=true
      - DOCKER_CONFIG=/config
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /volume1/docker/ai-service/config/watchtower:/config:ro
    command: ai-service
    ports:
      - "8080:8080"
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          memory: 128M

networks:
  ai-network:
    driver: bridge