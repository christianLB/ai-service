version: '3.8'

services:
  ai-service:
    build:
      context: .
      dockerfile: Dockerfile.invoices
      target: production
    container_name: ai-service-invoices
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://aiservice:aiservice123@postgres:5432/ai_service
      - REDIS_URL=redis://redis:6379
      
      # Company Configuration
      - COMPANY_NAME=${COMPANY_NAME:-AI Service Solutions}
      - COMPANY_LEGAL_NAME=${COMPANY_LEGAL_NAME:-AI Service Solutions S.L.}
      - COMPANY_TAX_ID=${COMPANY_TAX_ID:-B12345678}
      - COMPANY_EMAIL=${COMPANY_EMAIL:-info@aiservice.com}
      - COMPANY_PHONE=${COMPANY_PHONE:-+34 900 000 000}
      - COMPANY_WEBSITE=${COMPANY_WEBSITE:-https://aiservice.com}
      
      # Company Address
      - COMPANY_STREET=${COMPANY_STREET:-Calle Principal}
      - COMPANY_NUMBER=${COMPANY_NUMBER:-123}
      - COMPANY_CITY=${COMPANY_CITY:-Madrid}
      - COMPANY_STATE=${COMPANY_STATE:-Madrid}
      - COMPANY_COUNTRY=${COMPANY_COUNTRY:-Espa√±a}
      - COMPANY_POSTAL_CODE=${COMPANY_POSTAL_CODE:-28001}
      
      # Invoice Settings
      - INVOICE_PREFIX=${INVOICE_PREFIX:-FAC}
      - INVOICE_PUBLIC_URL=${INVOICE_PUBLIC_URL:-http://localhost:3000/api/invoices}
      
      # Email Configuration
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME:-AI Service}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@aiservice.com}
      
      # Puppeteer
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
    ports:
      - "3000:3000"
    volumes:
      # Invoice storage
      - ./storage/invoices:/app/storage/invoices
      - ./generated-invoices:/app/generated-invoices
      
      # Templates (for development)
      - ./src/templates:/app/dist/templates:ro
      
      # Logs
      - ./logs:/app/logs
      
      # Other data
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - ai-service-network

  postgres:
    image: postgres:15-alpine
    container_name: ai-service-postgres
    environment:
      - POSTGRES_USER=aiservice
      - POSTGRES_PASSWORD=aiservice123
      - POSTGRES_DB=ai_service
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/services/database-migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - ai-service-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ai-service-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ai-service-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ai-service-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aiservice.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - ai-service-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  ai-service-network:
    driver: bridge