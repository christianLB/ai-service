// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetReportsData, GetReportsResponse, GetReportsByIdData, GetReportsByIdResponse, DeleteReportsByIdData, DeleteReportsByIdResponse, PostReportsGenerateData, PostReportsGenerateResponse, GetReportsDownloadByIdData, GetReportsDownloadByIdResponse } from './types.gen';

export class ReportsService {
    /**
     * List all reports
     * Get a paginated list of all reports with optional filtering
     * @param data The data for the request.
     * @param data.page Page number for pagination
     * @param data.limit Number of items per page
     * @param data.type Filter by report type
     * @param data.format Filter by report format
     * @param data.status Filter by report status
     * @param data.startDate Filter reports created after this date
     * @param data.endDate Filter reports created before this date
     * @param data.createdBy Filter by user who created the report
     * @returns ReportListResponse Reports retrieved successfully
     * @throws ApiError
     */
    public static getReports(data: GetReportsData = {}): CancelablePromise<GetReportsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/reports',
            query: {
                page: data.page,
                limit: data.limit,
                type: data.type,
                format: data.format,
                status: data.status,
                startDate: data.startDate,
                endDate: data.endDate,
                createdBy: data.createdBy
            },
            errors: {
                400: 'Bad request - Invalid input data',
                401: 'Unauthorized - Invalid or missing authentication'
            }
        });
    }
    
    /**
     * Get single report details
     * Retrieve detailed information about a specific report
     * @param data The data for the request.
     * @param data.id Report unique identifier
     * @returns ReportResponse Report retrieved successfully
     * @throws ApiError
     */
    public static getReportsById(data: GetReportsByIdData): CancelablePromise<GetReportsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/reports/{id}',
            path: {
                id: data.id
            },
            errors: {
                401: 'Unauthorized - Invalid or missing authentication',
                404: 'Not found - Resource does not exist'
            }
        });
    }
    
    /**
     * Delete report
     * Delete a specific report and its associated files
     * @param data The data for the request.
     * @param data.id Report unique identifier
     * @returns MessageResponse Report deleted successfully
     * @throws ApiError
     */
    public static deleteReportsById(data: DeleteReportsByIdData): CancelablePromise<DeleteReportsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/reports/{id}',
            path: {
                id: data.id
            },
            errors: {
                401: 'Unauthorized - Invalid or missing authentication',
                403: 'Forbidden - Cannot delete report (e.g., in use or shared)',
                404: 'Not found - Resource does not exist'
            }
        });
    }
    
}

export class GenerationService {
    /**
     * Generate a new report
     * Create and generate a new report based on provided parameters
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReportResponse Report generation started successfully
     * @throws ApiError
     */
    public static postReportsGenerate(data: PostReportsGenerateData): CancelablePromise<PostReportsGenerateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/reports/generate',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request - Invalid input data',
                401: 'Unauthorized - Invalid or missing authentication',
                422: 'Invalid report parameters'
            }
        });
    }
    
}

export class DownloadsService {
    /**
     * Download report file
     * Download the generated report file in its specified format
     * @param data The data for the request.
     * @param data.id Report unique identifier
     * @param data.inline Whether to display inline or force download
     * @returns unknown Report file download
     * @throws ApiError
     */
    public static getReportsDownloadById(data: GetReportsDownloadByIdData): CancelablePromise<GetReportsDownloadByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/reports/download/{id}',
            path: {
                id: data.id
            },
            query: {
                inline: data.inline
            },
            errors: {
                401: 'Unauthorized - Invalid or missing authentication',
                404: 'Not found - Resource does not exist',
                410: 'Report file no longer available'
            }
        });
    }
    
}