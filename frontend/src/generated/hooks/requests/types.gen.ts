// This file is auto-generated by @hey-api/openapi-ts

export type Error = {
  /**
   * Error message
   */
  message: string;
  /**
   * Error code (BAD_REQUEST, NOT_FOUND, etc.)
   */
  code: string;
};

export type PaginationInfo = {
  page: number;
  limit: number;
  total: number;
};

export type Account = {
  id: string;
  account_id: string;
  name: string;
  type: string;
  institution?: string;
  institution_id?: string;
  iban?: string;
  currency?: string;
  balance?: number;
  available_balance?: number;
  is_active?: boolean;
  last_sync?: string;
  created_at?: string;
  updated_at?: string;
};

export type AccountListResponse = PaginationInfo & {
  accounts: Array<Account>;
};

export type Client = {
  id: string;
  name: string;
  email: string;
  taxId?: string;
  phone?: string;
  address?: string;
  city?: string;
  postalCode?: string;
  country?: string;
  status: 'active' | 'inactive';
  notes?: string;
  createdAt?: string;
  updatedAt?: string;
};

export type status = 'active' | 'inactive';

export type ClientListResponse = PaginationInfo & {
  clients: Array<Client>;
};

export type Invoice = {
  id: string;
  invoiceNumber: string;
  clientId: string;
  clientName?: string;
  clientTaxId?: string;
  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';
  total: number;
  subtotal?: number;
  tax?: number;
  issueDate: string;
  dueDate: string;
  paidDate?: string;
  notes?: string;
  items?: Array<InvoiceItem>;
  createdAt?: string;
  updatedAt?: string;
};

export type status2 = 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';

export type InvoiceItem = {
  description: string;
  quantity: number;
  unitPrice: number;
  total: number;
};

export type InvoiceListResponse = PaginationInfo & {
  invoices: Array<Invoice>;
};

export type Transaction = {
  id: string;
  transaction_id: string;
  account_id: string;
  amount: number;
  currency?: string;
  type: 'debit' | 'credit' | 'transfer';
  status?: 'pending' | 'confirmed' | 'failed' | 'cancelled';
  description?: string;
  reference?: string;
  counterparty_name?: string;
  counterparty_account?: string;
  date: string;
  tags?: Array<string>;
  fee_amount?: number;
  fee_currency?: string;
  metadata?: {
    [key: string]: unknown;
  };
  gocardless_data?: {
    [key: string]: unknown;
  };
  created_at?: string;
  updated_at?: string;
};

export type type = 'debit' | 'credit' | 'transfer';

export type status3 = 'pending' | 'confirmed' | 'failed' | 'cancelled';

export type TransactionListResponse = PaginationInfo & {
  transactions: Array<Transaction>;
  stats?: {
    totalIncome?: number;
    totalExpenses?: number;
  };
};

export type Attachment = {
  id: string;
  invoiceId: string;
  fileName: string;
  filePath: string;
  fileSize: number;
  fileType: string;
  description?: string;
  uploadedBy?: string;
  uploadedAt: string;
  isDeleted?: boolean;
  deletedAt?: string;
  deletedBy?: string;
};

export type AttachmentListResponse = PaginationInfo & {
  attachments: Array<Attachment>;
};

export type GetApiFinancialAccountsData = {
  /**
   * Items per page
   */
  limit?: number;
  /**
   * Page number (1-based)
   */
  page?: number;
};

export type GetApiFinancialAccountsResponse = AccountListResponse;

export type GetApiFinancialAccountsByIdData = {
  id: string;
};

export type GetApiFinancialAccountsByIdResponse = Account;

export type GetApiFinancialClientsData = {
  email?: string;
  limit?: number;
  name?: string;
  page?: number;
};

export type GetApiFinancialClientsResponse = ClientListResponse;

export type GetApiFinancialClientsByIdData = {
  id: string;
};

export type GetApiFinancialClientsByIdResponse = Client;

export type GetApiFinancialInvoicesData = {
  clientId?: string;
  limit?: number;
  page?: number;
  status?: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';
};

export type GetApiFinancialInvoicesResponse = InvoiceListResponse;

export type GetApiFinancialInvoicesByIdData = {
  id: string;
};

export type GetApiFinancialInvoicesByIdResponse = Invoice;

export type GetApiFinancialTransactionsData = {
  accountId?: string;
  dateFrom?: string;
  dateTo?: string;
  limit?: number;
  maxAmount?: number;
  minAmount?: number;
  page?: number;
  search?: string;
  status?: 'pending' | 'confirmed' | 'failed' | 'cancelled';
  type?: 'debit' | 'credit' | 'transfer';
};

export type GetApiFinancialTransactionsResponse = TransactionListResponse;

export type GetApiFinancialTransactionsByIdData = {
  id: string;
};

export type GetApiFinancialTransactionsByIdResponse = Transaction;

export type GetApiFinancialTransactionsExportData = {
  accountId?: string;
  dateFrom?: string;
  dateTo?: string;
  format?: 'csv' | 'json';
};

export type GetApiFinancialTransactionsExportResponse = Array<Transaction>;

export type GetApiFinancialAttachmentsData = {
  fileType?: string;
  invoiceId?: string;
  limit?: number;
  page?: number;
};

export type GetApiFinancialAttachmentsResponse = AttachmentListResponse;

export type GetApiFinancialAttachmentsByIdData = {
  id: string;
};

export type GetApiFinancialAttachmentsByIdResponse = Attachment;

export type $OpenApiTs = {
  '/api/financial/accounts': {
    get: {
      req: GetApiFinancialAccountsData;
      res: {
        /**
         * List of accounts
         */
        200: AccountListResponse;
        /**
         * Invalid parameters
         */
        400: Error;
      };
    };
  };
  '/api/financial/accounts/{id}': {
    get: {
      req: GetApiFinancialAccountsByIdData;
      res: {
        /**
         * Account details
         */
        200: Account;
        /**
         * Account not found
         */
        404: Error;
      };
    };
  };
  '/api/financial/clients': {
    get: {
      req: GetApiFinancialClientsData;
      res: {
        /**
         * List of clients
         */
        200: ClientListResponse;
        /**
         * Invalid parameters
         */
        400: Error;
      };
    };
  };
  '/api/financial/clients/{id}': {
    get: {
      req: GetApiFinancialClientsByIdData;
      res: {
        /**
         * Client details
         */
        200: Client;
        /**
         * Client not found
         */
        404: Error;
      };
    };
  };
  '/api/financial/invoices': {
    get: {
      req: GetApiFinancialInvoicesData;
      res: {
        /**
         * List of invoices
         */
        200: InvoiceListResponse;
        /**
         * Invalid parameters
         */
        400: Error;
      };
    };
  };
  '/api/financial/invoices/{id}': {
    get: {
      req: GetApiFinancialInvoicesByIdData;
      res: {
        /**
         * Invoice details
         */
        200: Invoice;
        /**
         * Invoice not found
         */
        404: Error;
      };
    };
  };
  '/api/financial/transactions': {
    get: {
      req: GetApiFinancialTransactionsData;
      res: {
        /**
         * List of transactions
         */
        200: TransactionListResponse;
        /**
         * Invalid parameters
         */
        400: Error;
      };
    };
  };
  '/api/financial/transactions/{id}': {
    get: {
      req: GetApiFinancialTransactionsByIdData;
      res: {
        /**
         * Transaction details
         */
        200: Transaction;
        /**
         * Transaction not found
         */
        404: Error;
      };
    };
  };
  '/api/financial/transactions/export': {
    get: {
      req: GetApiFinancialTransactionsExportData;
      res: {
        /**
         * Exported transactions
         */
        200: Array<Transaction>;
        /**
         * Invalid parameters
         */
        400: Error;
      };
    };
  };
  '/api/financial/attachments': {
    get: {
      req: GetApiFinancialAttachmentsData;
      res: {
        /**
         * List of attachments
         */
        200: AttachmentListResponse;
        /**
         * Invalid parameters
         */
        400: Error;
      };
    };
  };
  '/api/financial/attachments/{id}': {
    get: {
      req: GetApiFinancialAttachmentsByIdData;
      res: {
        /**
         * Attachment details
         */
        200: Attachment;
        /**
         * Attachment not found
         */
        404: Error;
      };
    };
  };
};
