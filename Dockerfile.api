# Backend API Dockerfile
FROM node:20-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++ git

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./
COPY tsconfig.build.json ./

# Install full deps for build, then prune later
RUN npm ci && npm cache clean --force

# Copy Prisma schema for generation
COPY prisma/ ./prisma/

# Copy source code
COPY src/ ./src/
COPY migrations/ ./migrations/
COPY scripts/ ./scripts/
COPY config/ ./config/

# Generate Prisma client (if used) and build
RUN npx prisma generate || echo "Prisma generate skipped" && \
    npm run build:backend && \
    npm prune --production

# Production stage
FROM node:20-alpine

# Build arguments for version info
ARG VERSION=latest
ARG BUILD_DATE=unknown
ARG COMMIT=unknown
ARG COMMIT_SHORT=unknown

# Install runtime dependencies
RUN apk add --no-cache \
    postgresql-client \
    curl \
    tini \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont

WORKDIR /app

# Copy node modules and built files
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/migrations ./migrations
COPY --from=builder /app/scripts ./scripts
COPY --from=builder /app/config ./config
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/prisma ./prisma

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

# Set environment variables from build args
ENV VERSION=${VERSION}
ENV BUILD_DATE=${BUILD_DATE}
ENV COMMIT=${COMMIT}
ENV COMMIT_SHORT=${COMMIT_SHORT}

USER nodejs

# Tell Puppeteer to use installed Chromium instead of downloading
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Use tini for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start the API server
EXPOSE 3001
CMD ["node", "dist/index.js"]