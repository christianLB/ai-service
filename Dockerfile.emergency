# Emergency Dockerfile that skips all validation
# Use this when normal build fails due to TypeScript or other issues

FROM node:20-alpine AS base

RUN apk add --no-cache \
    curl \
    dumb-init \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont

WORKDIR /app

# Copy everything
COPY . .

# Install production dependencies only
RUN npm ci --only=production --force || npm install --production --force

# Try to generate Prisma client
RUN npx prisma generate || echo "Prisma generation skipped"

# Try to build, but continue if it fails
RUN npm run build:backend:nocheck || echo "Backend build skipped"
RUN cd frontend && (npm ci --force || true) && (npm run build || echo "Frontend build skipped")

# Create necessary directories
RUN mkdir -p dist frontend/dist logs workflows data/documents/storage data/documents/temp

# Create minimal dist structure if build failed
RUN if [ ! -f "dist/index.js" ]; then \
    echo "console.log('Emergency build - service starting...');" > dist/index.js; \
    fi

# Set up for production
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001
RUN chown -R nodejs:nodejs /app

USER nodejs

ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

EXPOSE 3000

# Start with node directly if entrypoint fails
CMD ["dumb-init", "node", "dist/index.js"]