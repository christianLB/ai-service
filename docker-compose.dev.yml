version: '3.8'

services:
  # Backend API Service (Development)
  ai-service-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ai-service-api-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3001
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-ai_service_dev}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
    networks:
      - ai-service-network
    depends_on:
      - postgres
    ports:
      - "3001:3001"
    volumes:
      # Mount source for hot reload
      - ./src:/app/src:ro
      - ./migrations:/app/migrations:ro

  # Frontend Service (Development)
  ai-service-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: ai-service-frontend-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
    networks:
      - ai-service-network
    depends_on:
      - ai-service-api
    ports:
      - "3000:80"

  # PostgreSQL Database (Development)
  postgres:
    image: postgres:15-alpine
    container_name: ai-service-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-ai_service_dev}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - ai-service-network
    ports:
      - "5432:5432"

networks:
  ai-service-network:
    driver: bridge

volumes:
  postgres_data_dev:
    driver: local