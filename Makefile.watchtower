# Makefile para configuraci√≥n de Watchtower

.PHONY: watchtower-setup
watchtower-setup: ## üîß Configurar Watchtower completo
	@echo "üîß Configurando Watchtower para CI/CD autom√°tico..."
	@if [ -z "$$GITHUB_TOKEN" ]; then \
		echo "‚ùå Error: GITHUB_TOKEN no configurado"; \
		echo ""; \
		echo "export GITHUB_TOKEN='tu_token_de_github'"; \
		echo ""; \
		echo "El token debe tener permisos: read:packages"; \
		exit 1; \
	fi
	@./setup-watchtower-complete.sh

.PHONY: watchtower-copy
watchtower-copy: ## üì§ Copiar configuraci√≥n al NAS
	@echo "üì§ Copiando archivos al NAS..."
	@scp config/watchtower/config.json k2600x@192.168.1.11:/volume1/docker/ai-service/config/watchtower/
	@scp install-watchtower-nas.sh k2600x@192.168.1.11:/volume1/docker/ai-service/
	@scp docker-compose.production.yml k2600x@192.168.1.11:/volume1/docker/ai-service/docker-compose.yml
	@echo "‚úÖ Archivos copiados"

.PHONY: watchtower-install
watchtower-install: ## üöÄ Instalar Watchtower en el NAS
	@echo "üöÄ Instalando Watchtower en el NAS..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker rm -f ai-watchtower 2>/dev/null || true"
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker run -d --name ai-watchtower --restart unless-stopped -e WATCHTOWER_CLEANUP=true -e WATCHTOWER_POLL_INTERVAL=300 -e WATCHTOWER_INCLUDE_RESTARTING=false -e DOCKER_CONFIG=/config -v /var/run/docker.sock:/var/run/docker.sock -v /volume1/docker/ai-service/config/watchtower:/config:ro containrrr/watchtower:latest ai-service"
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker ps | grep watchtower"
	@echo "‚úÖ Watchtower instalado!"

.PHONY: watchtower-logs
watchtower-logs: ## üìã Ver logs de Watchtower
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker logs ai-watchtower --tail 50"

.PHONY: watchtower-test
watchtower-test: ## üß™ Probar que Watchtower funciona
	@echo "üß™ Probando Watchtower..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker exec ai-watchtower /watchtower --run-once ai-service"

.PHONY: watchtower-status
watchtower-status: ## üìä Ver estado de Watchtower
	@echo "üìä Estado de Watchtower:"
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker ps | grep watchtower || echo '‚ùå Watchtower no est√° corriendo'"

.PHONY: watchtower-restart
watchtower-restart: ## üîÑ Reiniciar Watchtower
	@echo "üîÑ Reiniciando Watchtower..."
	@sshpass -p "$${SSHPASS}" ssh -t k2600x@192.168.1.11 'echo "$${SSHPASS}" | sudo -S docker restart ai-watchtower && echo "‚úÖ Watchtower reiniciado"'

.PHONY: fix-cicd
fix-cicd: watchtower-setup watchtower-copy watchtower-install ## üîß Arreglar CI/CD completo
	@echo ""
	@echo "‚úÖ CI/CD configurado completamente!"
	@echo ""
	@echo "Ahora cada push a main resultar√° en:"
	@echo "1. Build autom√°tico en GitHub Actions"
	@echo "2. Push a ghcr.io"
	@echo "3. Deploy autom√°tico via Watchtower"
	@echo ""
	@echo "Para verificar: make watchtower-logs"
.PHONY: wlogs
wlogs: ## üìã Ver logs de Watchtower (simple)
	@echo "üìã Conect√°ndose al NAS para ver logs de Watchtower..."
	@echo "Ejecuta: sudo docker logs ai-watchtower --tail 50"
	@ssh k2600x@192.168.1.11


.PHONY: watchtower-check-auth
watchtower-check-auth: ## üîê Verificar autenticaci√≥n de Watchtower
	@echo "üîê Verificando autenticaci√≥n..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "ls -la /volume1/docker/ai-service/config/watchtower/config.json 2>/dev/null && echo ‚úÖ config.json existe || echo ‚ùå config.json NO existe"
	@echo ""
	@echo "üß™ Probando pull de imagen..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo ${SSHPASS}  < /dev/null |  sudo -S /usr/local/bin/docker pull ghcr.io/christianlb/ai-service:latest 2>&1 | grep -E \"(Pulling|Downloaded|up to date|unauthorized|denied)\" | tail -5"

.PHONY: watchtower-fix-container
watchtower-fix-container: ## üîß Arreglar contenedor ai-service para usar imagen de ghcr.io
	@echo "üîß Arreglando contenedor ai-service para usar imagen correcta..."
	@echo ""
	@echo "1Ô∏è‚É£ Verificando estado actual del contenedor..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker ps -a --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}' | grep -E '(NAMES|ai-service)' || echo '‚ùå Contenedor ai-service no encontrado'"
	@echo ""
	@echo "2Ô∏è‚É£ Deteniendo contenedor existente..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker stop ai-service 2>/dev/null || echo '‚ö†Ô∏è  No hab√≠a contenedor corriendo'"
	@echo ""
	@echo "3Ô∏è‚É£ Eliminando contenedor viejo..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker rm -f ai-service 2>/dev/null || echo '‚ö†Ô∏è  No hab√≠a contenedor para eliminar'"
	@echo ""
	@echo "4Ô∏è‚É£ Verificando autenticaci√≥n con ghcr.io..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "ls -la /volume1/docker/ai-service/config/watchtower/config.json 2>/dev/null && echo '‚úÖ config.json existe' || echo '‚ùå config.json NO existe - ejecuta: make watchtower-setup'"
	@echo ""
	@echo "5Ô∏è‚É£ Actualizando docker-compose.yml con imagen correcta..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "cd /volume1/docker/ai-service && echo '${SSHPASS}' | sudo -S sed -i 's|image: ai-service:simple|image: ghcr.io/christianlb/ai-service:latest|g' docker-compose.yml && echo '‚úÖ docker-compose.yml actualizado'"
	@echo ""
	@echo "6Ô∏è‚É£ Recreando contenedor con docker-compose..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "cd /volume1/docker/ai-service && echo '${SSHPASS}' | sudo -S /usr/local/bin/docker compose up -d ai-service"
	@echo ""
	@echo "7Ô∏è‚É£ Verificando nueva imagen..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}' | grep -E '(NAMES|ai-service)'"
	@echo ""
	@echo "8Ô∏è‚É£ Verificando que Watchtower puede monitorear el contenedor..."
	@sshpass -e ssh -o StrictHostKeyChecking=no k2600x@192.168.1.11 "echo '${SSHPASS}' | sudo -S /usr/local/bin/docker exec ai-watchtower /watchtower --run-once ai-service 2>&1 | grep -E '(Checking|Found|Updated|up-to-date|ai-service)' | head -10 || echo '‚ö†Ô∏è  Verifica que Watchtower est√© corriendo'"
	@echo ""
	@echo "‚úÖ Contenedor ai-service arreglado y monitoreado por Watchtower!"
	@echo ""
	@echo "Para verificar actualizaciones autom√°ticas:"
	@echo "  make watchtower-logs"
	@echo ""
	@echo "Para forzar una actualizaci√≥n:"
	@echo "  make watchtower-test"

