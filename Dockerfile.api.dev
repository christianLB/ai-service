# Development API Dockerfile - includes dev dependencies and hot reload
FROM node:20-alpine

# Install runtime dependencies
RUN apk add --no-cache \
    postgresql-client \
    curl \
    tini \
    python3 \
    make \
    g++ \
    git \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./
COPY tsconfig.json ./

# Install ALL dependencies (including dev deps for ts-node-dev)
RUN npm ci && \
    npm cache clean --force

# Copy Prisma schema for generation
COPY prisma/ ./prisma/

# Generate Prisma client
RUN npx prisma generate

# Copy source files (will be overridden by volume mounts in development)
COPY src/ ./src/
COPY migrations/ ./migrations/
COPY scripts/ ./scripts/
COPY config/ ./config/

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

USER nodejs

# Tell Puppeteer to use installed Chromium instead of downloading
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Use tini for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start with development hot reload
EXPOSE 3001
CMD ["npm", "run", "dev"]