# Configuración Nginx optimizada para bajo consumo de memoria
worker_processes 1;
worker_rlimit_nofile 1024;

events {
    worker_connections 512;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging optimizado
    access_log off;
    error_log /var/log/nginx/error.log warn;

    # Optimizaciones de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 100;

    # Compresión
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # Límites de buffer para bajo consumo de memoria
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    # Cache de archivos abiertos
    open_file_cache max=200 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Upstream para el backend
    upstream ai_service_backend {
        server ai-service-api:3001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Servidor principal
    server {
        listen 80 default_server;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Seguridad básica
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Frontend estático
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Assets estáticos con cache largo
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # API proxy
        location /api {
            proxy_pass http://ai_service_backend;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering deshabilitado para SSE
            proxy_buffering off;
            proxy_cache off;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://ai_service_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Cache health check brevemente
            proxy_cache_valid 200 5s;
            proxy_cache_valid any 1s;
        }

        # Métricas (acceso restringido)
        location /metrics {
            # Permitir solo desde red local
            allow 192.168.0.0/16;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            deny all;
            
            proxy_pass http://ai_service_backend/metrics;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # WebSocket para comunicación en tiempo real
        location /ws {
            proxy_pass http://ai_service_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Timeout largo para WebSocket
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # Página de error personalizada
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }

    # Servidor de monitoreo interno (opcional)
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Red Docker
            deny all;
        }
    }
}