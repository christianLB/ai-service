version: "3.8"

networks:
  ai-service-network:
    driver: bridge

services:
  # PostgreSQL básico
  postgres:
    image: postgres:15-alpine
    container_name: ai-service-db
    environment:
      POSTGRES_DB: ai_service
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: ultra_secure_password_2025
    volumes:
      - /volume1/docker/ai-service/postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - ai-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_user -d ai_service"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis básico
  redis:
    image: redis:7-alpine
    container_name: ai-service-redis
    command: redis-server --requirepass redis_secure_password_2025 --appendonly yes
    volumes:
      - /volume1/docker/ai-service/redis:/data
    ports:
      - "6380:6379"
    networks:
      - ai-service-network
    restart: unless-stopped

  # AI Service Principal (imagen simplificada)
  ai-service:
    image: node:20-slim
    container_name: ai-service-prod
    working_dir: /app
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y curl git && 
        rm -rf * .* 2>/dev/null || true &&
        git clone https://github.com/christianLB/ai-service.git . && 
        npm ci && 
        npm run build && 
        npm start
      "
    environment:
      - NODE_ENV=production
      - PORT=3000
      - TELEGRAM_BOT_TOKEN=7675285244:AAHcM733tpyttgRPWITfeQOAGnrtbrWThpE
      - TELEGRAM_CHAT_ID=5015255679
      - TELEGRAM_WEBHOOK_URL=https://ai-service.anaxi.net/api/telegram/webhook
      - TELEGRAM_ALERTS_ENABLED=true
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ai_service
      - POSTGRES_USER=ai_user
      - POSTGRES_PASSWORD=ultra_secure_password_2025
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_secure_password_2025
    ports:
      - "3003:3000"
    volumes:
      - /volume1/docker/ai-service/logs:/app/logs
    networks:
      - ai-service-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
