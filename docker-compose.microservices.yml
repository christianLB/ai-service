version: "3.8"

# TRUE MICROSERVICES - SEPARATE DATABASE INSTANCES
# As per USER DECISION: Option A (MIGRATION_AGREEMENT.md)

services:
  # ============================================
  # FINANCIAL SERVICE DATABASE (Dedicated)
  # ============================================
  financial-postgres:
    image: postgres:15-alpine
    container_name: financial-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=financial_db
      - POSTGRES_USER=financial_user
      - POSTGRES_PASSWORD=financial_secure_2025
    volumes:
      - financial_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U financial_user -d financial_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # TRADING SERVICE DATABASE (Dedicated)
  # ============================================
  trading-postgres:
    image: postgres:15-alpine
    container_name: trading-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=trading_db
      - POSTGRES_USER=trading_user
      - POSTGRES_PASSWORD=trading_secure_2025
    volumes:
      - trading_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user -d trading_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # AI CORE DATABASE (Dedicated)
  # ============================================
  ai-postgres:
    image: postgres:15-alpine
    container_name: ai-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ai_db
      - POSTGRES_USER=ai_user
      - POSTGRES_PASSWORD=ai_secure_2025
    volumes:
      - ai_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    ports:
      - "5437:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_user -d ai_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # COMMUNICATION SERVICE DATABASE (Dedicated)
  # ============================================
  comm-postgres:
    image: postgres:15-alpine
    container_name: comm-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=comm_db
      - POSTGRES_USER=comm_user
      - POSTGRES_PASSWORD=comm_secure_2025
    volumes:
      - comm_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    ports:
      - "5438:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U comm_user -d comm_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # AUTH/SHARED DATABASE (Existing)
  # ============================================
  # Using the existing ai-service-postgres on port 5434
  # for authentication and shared data only

  # ============================================
  # SHARED REDIS (For all services)
  # ============================================
  microservices-redis:
    image: redis:7-alpine
    container_name: microservices-redis
    restart: unless-stopped
    command: redis-server --requirepass microservices_redis_2025
    volumes:
      - microservices_redis_data:/data
    networks:
      - microservices-network
    ports:
      - "6380:6379"  # Different port to avoid conflict
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "microservices_redis_2025", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  microservices-network:
    driver: bridge
    # Connect to existing network for auth database access
    external: false

volumes:
  # Separate volumes for each database - TRUE ISOLATION
  financial_postgres_data:
    driver: local
  trading_postgres_data:
    driver: local
  ai_postgres_data:
    driver: local
  comm_postgres_data:
    driver: local
  microservices_redis_data:
    driver: local