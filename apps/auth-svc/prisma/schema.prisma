generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email             String    @unique @db.VarChar(255)
  password          String    @db.VarChar(255)
  passwordHash      String?   @map("password_hash") @db.VarChar(255)
  fullName          String?   @map("full_name") @db.VarChar(255)
  role              String    @default("user") @db.VarChar(50)
  isActive          Boolean   @default(true) @map("is_active")
  lastLogin         DateTime? @map("last_login") @db.Timestamptz(6)
  createdAt         DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime  @default(now()) @map("updated_at") @db.Timestamptz(6)
  
  @@map("users")
}

model RefreshToken {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tokenHash String   @map("token_hash") @db.VarChar(255)
  userId    String   @map("user_id") @db.Uuid
  expiresAt DateTime @map("expires_at") @db.Timestamptz(6)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  revokedAt DateTime? @map("revoked_at") @db.Timestamptz(6)

  @@unique([userId, tokenHash], name: "unique_active_token")
  @@index([userId])
  @@index([expiresAt])
  @@map("refresh_tokens")
}

model LoginAttempt {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @db.VarChar(255)
  ipAddress   String    @map("ip_address") @db.Inet
  success     Boolean
  attemptedAt DateTime  @default(now()) @map("attempted_at") @db.Timestamptz(6)

  @@index([email])
  @@index([ipAddress])
  @@map("login_attempts")
}