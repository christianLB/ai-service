// AI Core Service - Documents, Tags, Embeddings
// Generated from monolithic schema - 2025-08-20T15:03:01.748Z
// DATABASE: postgresql://ai_user:ai_secure_2025@localhost:5437/ai_db

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============= MODELS =============

model UniversalTag {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code           String    @unique @db.VarChar(100)
  name           String    @db.VarChar(255)
  description    String?
  entityTypes    String[]  @map("entity_types")
  patterns       Json?
  rules          Json?
  confidence     Float     @default(0.5)
  embeddingModel String?   @map("embedding_model") @db.VarChar(50)
  path           String
  level          Int       @default(0)
  color          String?   @db.VarChar(7)
  icon           String?   @db.VarChar(50)
  isActive       Boolean   @default(true) @map("is_active")
  isSystem       Boolean   @default(false) @map("is_system")
  metadata       Json?
  usageCount     Int       @default(0) @map("usage_count")
  successRate    Float     @default(0.0) @map("success_rate")
  lastUsed       DateTime? @map("last_used") @db.Timestamptz(6)
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  parentId       String?   @map("parent_id") @db.Uuid
  
  // Relations
  parent         UniversalTag?  @relation("TagHierarchy", fields: [parentId], references: [id])
  children       UniversalTag[] @relation("TagHierarchy")
  entityTags     EntityTag[]

  @@index([code])
  @@index([path])
  @@index([isActive])
  @@map("universal_tags")
}
model EntityTag {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entityType       String    @map("entity_type") @db.VarChar(50)
  entityId         String    @map("entity_id") @db.VarChar(255)
  method           String    @db.VarChar(20)
  confidence       Float     @default(0.5)
  appliedBy        String?   @map("applied_by") @db.VarChar(255)
  aiProvider       String?   @map("ai_provider") @db.VarChar(50)
  aiModel          String?   @map("ai_model") @db.VarChar(100)
  aiResponse       Json?     @map("ai_response")
  aiReasoning      String?   @map("ai_reasoning")
  isVerified       Boolean   @default(false) @map("is_verified")
  verifiedBy       String?   @map("verified_by") @db.VarChar(255)
  verifiedAt       DateTime? @map("verified_at") @db.Timestamptz(6)
  feedback         String?
  isCorrect        Boolean?  @map("is_correct")
  sourceEntityType String?   @map("source_entity_type") @db.VarChar(50)
  sourceEntityId   String?   @map("source_entity_id") @db.VarChar(255)
  relationshipType String?   @map("relationship_type") @db.VarChar(50)
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  tagId            String    @map("tag_id") @db.Uuid
  
  // Relations
  universalTag     UniversalTag @relation(fields: [tagId], references: [id])

  @@index([entityType, entityId])
  @@index([confidence])
  @@index([method])
  @@index([isVerified])
  @@index([createdAt])
  @@map("entity_tags")
}
model TagPattern {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  patternType   String   @map("pattern_type") @db.VarChar(20)
  pattern       Json
  weight        Float    @default(1.0)
  minConfidence Float    @default(0.5) @map("min_confidence")
  matchCount    Int      @default(0) @map("match_count")
  successCount  Int      @default(0) @map("success_count")
  accuracy      Float    @default(0.0)
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  tagId         String   @map("tag_id") @db.Uuid

  @@index([isActive])
  @@map("tag_patterns")
}
model EntityRelationship {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sourceType       String   @map("source_type") @db.VarChar(50)
  sourceId         String   @map("source_id") @db.VarChar(255)
  targetType       String   @map("target_type") @db.VarChar(50)
  targetId         String   @map("target_id") @db.VarChar(255)
  relationshipType String   @map("relationship_type") @db.VarChar(50)
  confidence       Float
  discoveredBy     String   @map("discovered_by") @db.VarChar(20)
  metadata         Json?
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@unique([sourceType, sourceId, targetType, targetId, relationshipType], map: "entity_relationships_source_type_source_id_target_type_tar_key")
  @@index([sourceType, sourceId])
  @@index([targetType, targetId])
  @@index([relationshipType])
  @@map("entity_relationships")
}
model TaggingAuditLog {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation        String   @db.VarChar(50)
  entityType       String   @map("entity_type") @db.VarChar(50)
  entityId         String   @map("entity_id") @db.VarChar(255)
  previousTags     Json?    @map("previous_tags")
  newTags          Json?    @map("new_tags")
  changes          Json?
  method           String?  @db.VarChar(20)
  userId           String?  @map("user_id") @db.VarChar(255)
  userEmail        String?  @map("user_email") @db.VarChar(255)
  ipAddress        String?  @map("ip_address") @db.Inet
  userAgent        String?  @map("user_agent")
  success          Boolean
  errorMessage     String?  @map("error_message")
  processingTimeMs Int?     @map("processing_time_ms")
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  entityTagId      String?  @map("entity_tag_id") @db.Uuid

  @@index([entityType, entityId])
  @@index([operation])
  @@index([createdAt])
  @@index([userId])
  @@map("tagging_audit_log")
}
model TagLearningFeedback {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entityType       String    @map("entity_type") @db.VarChar(50)
  entityId         String    @map("entity_id") @db.VarChar(255)
  isCorrect        Boolean   @map("is_correct")
  confidenceImpact Float?    @map("confidence_impact")
  userId           String    @map("user_id") @db.VarChar(255)
  userRole         String?   @map("user_role") @db.VarChar(50)
  feedbackText     String?   @map("feedback_text")
  isProcessed      Boolean   @default(false) @map("is_processed")
  processedAt      DateTime? @map("processed_at") @db.Timestamptz(6)
  appliedChanges   Json?     @map("applied_changes")
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  entityTagId      String?   @map("entity_tag_id") @db.Uuid
  originalTagId    String?   @map("original_tag_id") @db.Uuid
  suggestedTagId   String?   @map("suggested_tag_id") @db.Uuid

  @@index([entityType, entityId])
  @@index([isProcessed])
  @@index([createdAt])
  @@map("tag_learning_feedback")
}
model TagMetrics {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  periodStart     DateTime @map("period_start") @db.Date
  periodEnd       DateTime @map("period_end") @db.Date
  periodType      String   @map("period_type") @db.VarChar(20)
  usageCount      Int      @default(0) @map("usage_count")
  uniqueEntities  Int      @default(0) @map("unique_entities")
  verifiedCount   Int      @default(0) @map("verified_count")
  correctCount    Int      @default(0) @map("correct_count")
  accuracyRate    Float?   @map("accuracy_rate")
  avgConfidence   Float?   @map("avg_confidence")
  avgProcessingMs Float?   @map("avg_processing_time_ms")
  aiCount         Int      @default(0) @map("ai_count")
  patternCount    Int      @default(0) @map("pattern_count")
  manualCount     Int      @default(0) @map("manual_count")
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  tagId           String   @map("tag_id") @db.Uuid

  @@index([periodStart, periodType])
  @@map("tag_metrics")
}
model TagAIModel {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider         String   @db.VarChar(50)
  modelName        String   @map("model_name") @db.VarChar(100)
  modelVersion     String   @map("model_version") @db.VarChar(50)
  config           Json?
  minConfidence    Float    @default(0.7) @map("min_confidence")
  totalPredictions Int      @default(0) @map("total_predictions")
  successRate      Float    @default(0.0) @map("success_rate")
  avgLatencyMs     Float?   @map("avg_latency_ms")
  isActive         Boolean  @default(true) @map("is_active")
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  tagId            String   @map("tag_id") @db.Uuid

  @@index([provider])
  @@index([isActive])
  @@map("tag_ai_models")
}
model TagImportJob {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  jobType          String    @map("job_type") @db.VarChar(20)
  status           String    @default("pending") @db.VarChar(20)
  config           Json
  totalRecords     Int?      @map("total_records")
  processedRecords Int       @default(0) @map("processed_records")
  successCount     Int       @default(0) @map("success_count")
  errorCount       Int       @default(0) @map("error_count")
  errors           Json?
  startedAt        DateTime? @map("started_at") @db.Timestamptz(6)
  completedAt      DateTime? @map("completed_at") @db.Timestamptz(6)
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  createdBy        String    @map("created_by") @db.VarChar(255)

  @@index([status])
  @@index([jobType])
  @@index([createdAt])
  @@map("tag_import_jobs")
}