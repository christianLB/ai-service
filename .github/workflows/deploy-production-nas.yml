name: Build and Push Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Build and push Docker image
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-sha: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci --legacy-peer-deps
      
    - name: Run pre-deploy validations
      run: |
        echo "🔍 Running pre-deploy validations..."
        npm run build
        npm run typecheck
        echo "✅ All validations passed!"

    - name: Generate version info
      id: version
      run: |
        echo "timestamp=$(date -u +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
        echo "commit_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "commit_full=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        echo "version=v$(date -u +%Y.%m.%d)-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "build_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ steps.version.outputs.version }}
        labels: |
          org.opencontainers.image.version=${{ steps.version.outputs.version }}
          org.opencontainers.image.revision=${{ steps.version.outputs.commit_full }}
          ai-service.build.timestamp=${{ steps.version.outputs.timestamp }}
          ai-service.build.commit=${{ steps.version.outputs.commit_short }}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        target: production
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ steps.version.outputs.version }}
          BUILD_DATE=${{ steps.version.outputs.build_date }}
          COMMIT=${{ steps.version.outputs.commit_full }}
          COMMIT_SHORT=${{ steps.version.outputs.commit_short }}

  # Notify deployment completion
  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Deployment Summary
      run: |
        echo "🎉 Docker image built and pushed successfully!"
        echo "📦 Image: ${{ needs.build.outputs.image-tag }}"
        echo "🔗 Registry: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo ""
        echo "✅ Watchtower will automatically detect and deploy the new version"
        echo "📱 You will receive Telegram notifications when deployment completes"
        echo "🔄 No manual intervention required"