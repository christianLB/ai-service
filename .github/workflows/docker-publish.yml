name: Build and Publish Docker Image (Legacy)

on:
  # Disabled - now handled by deploy-production.yml
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build without deployment'
        required: false
        default: 'false'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Setup Node.js for validation
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci --legacy-peer-deps
      
    - name: Generate Prisma Client
      run: npx prisma generate
      
    - name: Run build validation
      run: |
        echo "üîç Running pre-deploy validations..."
        npm run build
        npm run typecheck
        echo "‚úÖ All validations passed!"

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        target: production

    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}