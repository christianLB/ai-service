name: CI Build

on:
  push:
    branches: [ main, feat/** ]
  pull_request:
    branches: [ main, feat/** ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm -w install --no-frozen-lockfile

      - name: Generate and build contracts
        run: |
          pnpm contracts:generate
          pnpm contracts:build

      - name: Contracts drift check
        run: pnpm contracts:check

      - name: Build all apps
        run: pnpm -r --filter "./apps/*" build

      - name: Build all packages
        run: pnpm -r --filter "./packages/*" build

      - name: Typecheck (no emit)
        run: npx tsc -b --noEmit

  smoke:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Prepare .env for compose
        run: |
          # Compose references infra/compose/../../.env => repo root .env
          touch .env

      - name: Start stack (dev compose)
        working-directory: infra/compose
        run: |
          docker compose -f docker-compose.dev.yml up -d --build

      - name: Wait for gateway readiness
        run: |
          for i in {1..60}; do
            if curl -sf http://localhost:3005/health/ready > /dev/null; then
              echo "gateway ready"; exit 0; fi; sleep 2; done; echo "gateway not ready"; docker compose -f infra/compose/docker-compose.dev.yml logs api-gateway || true; exit 1

      - name: Smoke - list accounts
        run: |
          curl -sf http://localhost:3005/api/financial/accounts | tee accounts.json

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Smoke - get account by id
        run: |
          ID=$(jq -r '.accounts[0].id' accounts.json)
          if [ -z "$ID" ] || [ "$ID" = "null" ]; then echo "No account id found"; exit 1; fi
          curl -sf "http://localhost:3005/api/financial/accounts/$ID" | jq .

      - name: Teardown stack
        if: always()
        working-directory: infra/compose
        run: docker compose -f docker-compose.dev.yml down -v
